const CACHE_NAME="inobill-v1.0.0",STATIC_CACHE="inobill-static-v1.0.0",DYNAMIC_CACHE="inobill-dynamic-v1.0.0",STATIC_FILES=["/","/index.html","/style.css","/script.js","/icon.png","/icons/icon-192x192.png","/icons/icon-512x512.png","/offline.html","/manifest.json"];async function handleBackgroundSync(){try{const t=await getPendingData();if(t.length>0)for(const n of t)await processPendingData(n)}catch(t){}}async function getPendingData(){return[]}async function processPendingData(t){}async function clearOldCaches(){const t=(await caches.keys()).filter((t=>t.startsWith("inobill-")&&t!==STATIC_CACHE&&t!==DYNAMIC_CACHE));return Promise.all(t.map((t=>caches.delete(t))))}async function updateCache(){return(await caches.open(STATIC_CACHE)).addAll(STATIC_FILES)}self.addEventListener("install",(t=>{t.waitUntil(caches.open(STATIC_CACHE).then((t=>t.addAll(STATIC_FILES))).then((()=>self.skipWaiting())).catch((t=>{})))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.map((t=>{if(t!==STATIC_CACHE&&t!==DYNAMIC_CACHE)return caches.delete(t)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(t=>{const{request:n}=t,e=new URL(n.url);"GET"===n.method&&e.protocol.startsWith("http")&&t.respondWith(caches.match(n).then((t=>t||fetch(n).then((t=>{if(!t||200!==t.status||"basic"!==t.type)return t;const e=t.clone();return caches.open(DYNAMIC_CACHE).then((t=>{t.put(n,e)})),t})).catch((t=>"document"===n.destination?caches.match("/offline.html"):caches.match(n))))))})),self.addEventListener("sync",(t=>{"background-sync"===t.tag&&t.waitUntil(handleBackgroundSync())})),self.addEventListener("push",(t=>{const n={body:t.data?t.data.text():"InoBill notification",icon:"/icons/icon-192x192.png",badge:"/icons/icon-72x72.png",vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:1},actions:[{action:"explore",title:"Open InoBill",icon:"/icons/icon-96x96.png"},{action:"close",title:"Close",icon:"/icons/icon-96x96.png"}]};t.waitUntil(self.registration.showNotification("InoBill",n))})),self.addEventListener("notificationclick",(t=>{if(t.notification.close(),"explore"===t.action)t.waitUntil(clients.openWindow("/"));else{if("close"===t.action)return;t.waitUntil(clients.openWindow("/"))}})),self.addEventListener("message",(t=>{t.data&&"SKIP_WAITING"===t.data.type&&self.skipWaiting(),t.data&&"GET_VERSION"===t.data.type&&t.ports[0].postMessage({version:CACHE_NAME})})),self.updateCache=updateCache,self.clearOldCaches=clearOldCaches;